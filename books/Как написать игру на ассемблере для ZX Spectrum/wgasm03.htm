<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
   <META NAME="Author" CONTENT="Alex">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.04 [en] (Win95; I) [Netscape]">
   <META NAME="KEYWORDS" CONTENT="zx, spectrum, speccy, sinclair, z80, assembler">
   <TITLE>Как написать игру для ZX Spectrum на ассемблере - ГЛАВА 3</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#FF0000" ALINK="#000066">

<BASEFONT SIZE=3>

<h2><center><a name="n00">ГЛАВА ТРЕТЬЯ,</a></center></h2>
<center><b>обучающая вводу и редактированию игровых программ в ассемблере GENS4</b></center>
<p><br><br>
Существует несколько версий программы GENS, но для определенности мы будем рассматривать GENS4. Тем не менее, почти все, о чем пойдет речь в нашей книге, справедливо и для других версий ассемблера фирмы HISOFT, поэтому мы не всегда станем уточнять версию, а чаще будем писать просто GENS.
<p><br>
<h3><a name="n01">ЗАГРУЗКА GENS4</a></h3>
<hr>
Для начала нужно сказать несколько слов о самой программе. Ее часто можно встретить в пакете с монитором-отладчиком MONS под общим названием <b>DEVPAC</b>. Этот пакет состоит из трех файлов:
<ul>
<li>Загрузчик на Бейсике (изначально пакет DEVPAC не содержал загрузчика на Бейсике, а появился он там благодаря Н.&nbsp;Родионову&nbsp;[2]&nbsp;- <i>Примеч.&nbsp;ред.</i>);</li>
<li>Ассемблер GENS4 (или GENS3);</li>
<li>Монитор-отладчик MONS4 (MONS3).</li>
</ul>
На самом деле вовсе не обязательно загружать в память весь пакет. Во-первых, отладчик нам сейчас не нужен&nbsp;- он понадобится позже, когда мы начнем дизассемблировать (то есть получать исходные тексты) программы в машинных кодах, а во-вторых, GENS (так же, впрочем, как и MONS) может быть загружен по любому удобному адресу, отличному от заданного в загрузчике. Поэтому чаще достаточно загружать только коды ассемблера, введя с клавиатуры, например, такую строку:
<pre>
LOAD "GENS4"CODE 25000
</pre>
После этого (или до) опустите <tt>RAMTOP</tt> на один байт ниже адреса загрузки ассемблера, выполнив оператор
<pre>
CLEAR 24999
</pre>
и теперь, чтобы GENS можно было запустить командой <tt>RUN</tt>, введите строку
<pre>
10 RANDOMIZE USR 25000
</pre>
Если вас по какой-то причине не вполне устраивает предложенный адрес, можете заменить его на любой другой. Помните только, что он не должен быть слишком низким (чтобы не повредить бейсик-систему) или слишком высоким (чтобы поместился не только сам GENS, но и текст будущей программы, который расположится следом за кодами ассемблера). Допустимый диапазон адресов загрузки лежит примерно в пределах от&nbsp;24500 до&nbsp;54000.
<p><br>
<h3><a name="n02">СТРУКТУРА АССЕМБЛЕРНОЙ СТРОКИ</a></h3>
<hr>
Как и в любом другом языке, программа на ассемблере начинается с набора исходного текста. Наверное, нет надобности говорить, что для этих целей редактор Бейсика, встроенный в компьютер, совершенно непригоден. Посему в первую очередь необходимо освоить специальный редактор ассемблерных текстов, в который вы попадаете сразу после запуска GENS. В&nbsp;этой главе мы научим вас вводить строки программы, просматривать полученный текст и, наконец, транслировать готовую программу.
<p>
Прежде всего нужно сказать о структуре строк исходного текста программы на ассемблере. Они состоят из нескольких полей и имеют следующий формат:
<pre>
       Номер Поле меток Поле мнемоник Поле операндов
       12345 LABEL      LD            BC,1000
</pre>
Каждое поле служит для определенных целей, поэтому мнемоника, например, не может быть записана в поле меток&nbsp;- это неминуемо приведет к ошибке.
<p>
Рассмотрим назначение каждого их этих полей.
<p>
Хотя строки в программах для GENS и нумеруются, но в ассемблере ссылки на номера строк, в отличие от Бейсика, нигде не применяются. Нумерация нужна исключительно для определения очередности следования строк, вывода листинга на экран или принтер и для вызова строк на редактирование. Допустимые значения этого поля&nbsp;- от&nbsp;1 до&nbsp;32767.
<p>
Но как же, спросите вы, в ассемблере отмечаются точки переходов, как обозначаются начала подпрограмм и данных, если отсутствуют ссылки на номера строк? Просто в ассемблере для этого используется другая методика, гораздо более удобная, как вы почувствуете позже. Здесь для любого рода ссылок используются специальные имена, задаваемые программистом, которые называются <i>метками</i>. Метки записываются в следующем после номера строки поле&nbsp;- в поле меток. Конечно, это поле не обязательно должно заполняться в каждой строке. Метки расставляются только там, где в них действительно возникает необходимость. Дальше мы более подробно поговорим о них и вообще о методах адресации, а пока перейдем к следующему полю строки.
<p>
Как мы уже говорили, в ассемблере команды микропроцессора представляются в виде сокращений английских слов и такие аббревиатуры называются мнемониками или мнемокодами. При наборе строк программы мнемоники команд должны располагаться обязательно в своем поле, иначе GENS не сможет их распознать, что приведет к появлению ошибки. В&nbsp;этом же поле записываются и специальные инструкции&nbsp;- директивы ассемблера, о которых мы также обязательно расскажем, но несколько позже. При необходимости это поле, так же, как и предыдущее, может быть пустым.
<p>
Если у команды имеются какие-либо операнды, они записываются в следующем и последнем поле строки&nbsp;- в поле операндов. Таким образом полная команда может занимать в строке программы одно или два поля.
<p><br>
<h3><a name="n03">ВВОД СТРОКИ</a></h3>
<hr>
Давайте напишем небольшую программку, находясь в редакторе GENS. Для этого загрузите и запустите ассемблер, как было сказано выше, для определенности выбрав адрес загрузки равным 25000.
<p>
Вводить строки можно двумя способами: так же, как и в Бейсике, то есть каждый раз набирать номер и текст, или воспользоваться автоматической нумерацией, что на наш взгляд несравненно удобнее. Для автоматической нумерации строк нужно на подсказку редактора (символ <b>&gt;</b> с курсором&nbsp;C или&nbsp;L) ввести команду <b>I</b> (Insert&nbsp;- режим вставки строк) и нажать <b>Enter</b>. Первая строка будет иметь номер&nbsp;10 и последующие номера будут увеличиваться с шагом&nbsp;10. Если вы пожелаете изменить порядок нумерации строк, введите ту же команду <b>I</b>, но с двумя параметрами, разделенными запятой: первое число&nbsp;- начальный номер, второе&nbsp;- шаг. Например, <b>I100,5</b>.
<p>
Итак, введите команду <b>I</b> с параметрами или без&nbsp;- после старта GENS оба параметра по умолчанию равны&nbsp;10, поэтому в самом начале работы их можно и не указывать.
<p>
Так как в первой строке метки нам не понадобятся, сразу перейдем к полю мнемоник. Переход к следующему полю строки осуществляется вводом символа табуляции, который получается при одновременном нажатии клавиш <b>Caps&nbsp;Shift</b> и <b>8</b>. (Вместо символов табуляции можно вводить просто один или несколько пробелов&nbsp;- после окончательного ввода строки они автоматически будут заменены кодами табуляции, и при просмотре листинга текст будет выглядеть аккуратно выровненным по границам полей.) Нажмите эту комбинацию клавиш и увидите, как курсор перескочит вправо сразу на несколько позиций печати. Теперь можно набрать какую-нибудь инструкцию.
<p>
Как правило, программы на ассемблере начинаются с указания начального адреса, то есть того адреса, с которого полученная программа будет загружаться в память. Это достигается включением в программу директивы <b>ORG</b> (от англ. Origin&nbsp;- начало), следом за которой пишется десятичный или шестнадцатеричный адрес. (При записи шестнадцатеричных чисел они должны начинаться с символа&nbsp;<b>#</b>, например, #3FC.) Наберите в первой строке эту директиву и укажите после символа табуляции адрес 60000. Если вы случайно нажмете не ту клавишу, удалить последний введенный символ можно обычным образом, нажав клавиши <b>Caps&nbsp;Shift/0</b> или <b>Delete</b>. Но вот переместить курсор к любому символу строки стандартными методами не удастся: ведь клавиши <b>Caps&nbsp;Shift/8</b>, как вы уже знаете, отвечают за ввод табуляции, а <b>Caps&nbsp;Shift/5</b> удалит весь текст строки и переместит курсор в самое ее начало. Закончите ввод нажатием клавиши <b>Enter</b>, после чего строка должна принять вид
<pre>
10     ORG   60000
</pre>
а ниже появится номер следующей строки с курсором.
<p>
Аналогичным образом введите еще две строки:
<pre>
20     LD    BC,1000
30     RET
</pre>
Теперь нам нужно вернуться в строчный редактор GENS. Для этого достаточно нажать клавишу <b>Edit</b> или <b>Caps&nbsp;Shift/1</b>. На экране снова появится подсказка, на которую можно вводить команды редактора.
<p><br>
<h3><a name="n04">ПРОСМОТР ТЕКСТА</a></h3>
<hr>
После ввода достаточно больших программ часто возникает необходимость просмотра полученного текста. Команда <b>L</b> позволяет вывести на экран листинг программы с любой строки по любую. Если команда введена без параметров, листинг будет выводиться с самой первой строки и до конца порциями по 15&nbsp;строк. После вывода очередной порции будет ожидаться нажатие любой клавиши кроме <b>Edit</b>, которая прервет вывод и вернет управление редактору. Общий вид команды такой:
<pre>
L[начальная строка[,конечная строка]]
</pre>
Квадратные скобки указывают на необязательность параметров.
<p>
Если хотите, можете воспользоваться командой <b>L</b> и еще раз взглянуть на только что набранный текст.
<p><br>
<h3><a name="n05">ТРАНСЛЯЦИЯ ПРОГРАММЫ</a></h3>
<hr>
Оттранслируйте теперь полученный исходный текст. Введите команду <b>A</b> безо всяких параметров. На экране должна появиться примерно такая надпись:
<pre>
       HiSoft GEN Assembler ZX Spectrum
       ZX Microdrive Version 4.1b

       Copyright (C) HiSoft 1987
       V4.1 All right reserved

       Pass 1 errors: 00

       Pass 2 errors: 00

       Table used: 13 from 104
</pre>
Текст &laquo;шапки&raquo;, естественно, может быть и другим, все зависит от версии, которой вы пользуетесь. Здесь нам важно, в общем-то, одно&nbsp;- то, что ни в первом, ни во втором проходе ассемблирования (Pass) ошибок (errors) не обнаружено. Надо сказать, что ассемблер обрабатывает исходный текст в два прохода: на первом проверяются синтаксические ошибки и выстраивается таблица меток (ее размер показывает самая нижняя строка сообщения Table&nbsp;used); во втором проходе генерируется машинный код программы.
<p><br>
<h3><a name="n06">ВЫХОД ИЗ GENS</a></h3>
<hr>
Убедившись, что ошибок нет (по крайней мере, грубых), неплохо было бы проверить работоспособность получившейся программы. Работая с GENS вы в любой момент можете временно попрощаться с ассемблером и выйти в Бейсик, дав редактору команду <b>B</b> (Bye&nbsp;- &laquo;до встречи&raquo; или Basic, если вам так легче запомнить).
<p>
После выхода из GENS4 мы рекомендуем вам прежде всего очищать экран оператором <tt>CLS</tt> или простым нажатием клавиши <b>Enter</b>. Дело в том, что эта версия пользуется для вывода на экран встроенным драйвером, позволяющим выводить в строке до 51&nbsp;символа мелким шрифтом, и при выходе стандартный канал вывода по каким-то причинам не сразу восстанавливается. Поэтому до очистки экрана оператор <tt>PRINT</tt> может не дать ожидаемых результатов.
<p>
Вероятно, вы обратили внимание на то, что предложенный пример в точности повторяет программку, которую мы недавно вводили с помощью оператора <tt>POKE</tt>. Поверьте, что сделали это мы не от скудости воображения, а для того, чтобы вы имели возможность удостовериться в идентичности полученных тогда и сейчас результатов. Введите с клавиатуры строку
<pre>
FOR n=60000 TO 60003: PRINT PEEK n: NEXT n
</pre>
и увидите столбик чисел, совпадающих с теми, которые мы вводили ранее вручную.
<p>
Снова вызовите редактор GENS и введите команду <b>L</b>. Как видите, текст набранной программки никуда не исчез.
<p><br>
<h3><a name="n07">ВНЕСЕНИЕ В ТЕКСТ ИЗМЕНЕНИЙ</a></h3>
<hr>
Следующий по важности момент после набора строк&nbsp;- редактирование исходного текста. Ведь трудно себе представить, что какая-то программа может быть написана одним заходом, сразу начисто, без ошибок и опечаток. Для этого нужно научиться быстро изменять текст строк, не переписывая их целиком, вставлять недостающие команды, удалять лишние и, наконец, записывать программу на внешний носитель, чтобы плоды вашего труда не пропали даром.
<p>
Начнем со способов внесения правок в уже имеющийся текст. Для вызова строки на редактирование служит команда <b>E</b> (Edit) с номером нужной строки (рис.&nbsp;3.1). Давайте в нашей программке подправим, например, строку&nbsp;20, изменив число, загружаемое в регистровую пару BC. Введите команду&nbsp;E20. То, что вы увидели, возможно, несколько удивило вас. На экране появилась вызванная строка, но курсор на ней не задержался, а проскочил ниже, напечатав только номер. Весь остальной текст куда-то подевался. Может создаться такое впечатление, что теперь необходимо набирать весь текст заново. Однако, это только впечатление, и на самом деле строка сейчас готова к редактированию.
<p>
<center>
<img src="pic\gens.gif"><p>
<i>Рис. 3.1. Редактирование строки в GENS4</i></center>
<p>
Вы можете вносить изменения в текст строки двумя способами: в <i>режиме вставки</i>, в котором вновь введенные символы &laquo;раздвигают&raquo; строку и не затирают имеющийся текст, и в <i>режиме замены</i>, в котором новые символы ложатся поверх прежних. В&nbsp;любом случае сначала необходимо подвести курсор к тому месту строки, где требуются какие-либо изменения. Вправо курсор можно перемещать по одной позиции, нажимая пробел, или разом перескакивать к следующему полю при нажатии <b>Caps&nbsp;Shift/8</b>. Перемещая курсор, вы увидите появляющийся под ним текст строки. Возврат на одну позицию влево происходит при нажатии клавиши <b>Delete</b> (<b>Caps&nbsp;Shift/0</b>)(обратите внимание на тот факт, что пока еще ничего не удаляется&nbsp;- вы просто перемещаете курсор, а верхняя строка нужна для подсказки).
<p>
Подведите курсор к числу 1000 так, чтобы он находился точно под единицей. Затем нажмите клавишу <b>C</b> для перехода в режим замены символов (в режим вставки можно перейти, нажав клавишу <b>I</b>, но это&nbsp;- на будущее). Обратите внимание, что курсор при этом изменяет свой вид. Теперь он выглядит как инвертированный символ <b>+</b> (в&nbsp;режиме вставки курсор имеет вид символа <b>*</b>, и это тоже&nbsp;- на будущее). Замените цифру&nbsp;1 на&nbsp;5, а следующий ноль, скажем, на&nbsp;3. Затем выйдите из режима замены, нажав <b>Enter</b> и, наконец, введите строку в программу, еще раз нажав <b>Enter</b>. Редактирование строки закончено, и сейчас она должна иметь вид
<pre>
20     LD    BC,5300
</pre>
Можете ассемблировать новый текст и, выйдя в Бейсик, выполнить получившуюся программку оператором
<pre>
PRINT USR 60000
</pre>
Прежде чем показать вам, как можно сохранить исходный текст и готовый машинный код, приведем и остальные команды редактирования строки. Вот они:
<pre>
<b>L</b> (List)   - показать на экране текущий вид строки;
<b>K</b> (Kill)   - удалить символ в позиции курсора;
<b>Z</b> (Zap)    - удалить весь текст от курсора до конца строки;
<b>X</b> (eXpand) - переместить курсор в конец строки и войти в режим вставки;
<b>Q</b> (Quit)   - отменить все сделанные правки и закончить редактирование строки;
<b>R</b> (Reload) - отменить все исправления и начать редактирование заново.
</pre>
Все эти команды выполняются до включения режимов вставки или замены символов (команды&nbsp;<b>I</b> или&nbsp;<b>C</b>). Если же один из этих режимов уже включен, следует прежде выйти из него, нажав <b>Enter</b>.
<p><br>
<h3><a name="n08">СОХРАНЕНИЕ И ЗАГРУЗКА ТЕКСТОВ И ПРОГРАММ</a></h3>
<hr>
Разобравшись с методами редактирования строк, пора узнать, как сохраняются результаты. В&nbsp;отличие от Бейсика, редактор GENS позволяет сохранить не только весь текст целиком, но и произвольную его часть, для чего в команде <b>P</b> (Put text) прежде указывается начальная строка сохраняемого фрагмента, а затем&nbsp;- конечная. Самым последним параметром команды служит имя, под которым вы хотите сохранить текст. (У&nbsp;строчного редактора есть одно полезное, но в некоторых случаях опасное свойство: часть команд, будучи введенными без параметров, выполняется с параметрами предыдущей команды. Поэтому, на первых порах будьте особо внимательны.) Поскольку в этой команде нет необязательных параметров, то для записи всего текста можно задать границы номеров сохраняемых строк &laquo;с запасом&raquo; и ввести, например, такую строчку:
<pre>
P1,20000,ASMTEXT
</pre>
Если вы работаете с дисководом и имеете в своем распоряжении дисковую версию ассемблера GENS4D или gens4b, то можете записать исходный текст на дискету. Формат команды в этом случае останется, в общем-то, тем же самым, только имя файла должно начинаться с указания номера дисковода, к которому вы собираетесь обратиться. Например, для записи на дисковод A нужно ввести
<pre>
P1,20000,1:ASMTEXT
</pre>
Заметьте, что двоеточие между номером дисковода и именем обязательно.
<p>
Обратное действие&nbsp;- загрузка ранее созданного исходного текста&nbsp;- осуществляется с помощью команды редактора <b>G</b> (Get text). Формат ее похож на формат предыдущей команды, правда, значение имеет только последний параметр&nbsp;- имя файла. Поэтому для загрузки программы GAME с магнитофона следует ввести
<pre>
G,,GAME
</pre>
а для загрузки одноименного файла с дисковода B эта же команда примет вид
<pre>
G,,2:GAME
</pre>
По сравнению с оператором Бейсика <tt>LOAD</tt> у команды <b>G</b> есть одно существенное отличие: она не уничтожает уже имеющийся в памяти текст, а добавляет новый в конец. После объединения строки программы будут перенумерованы с номера&nbsp;1 и с единичным шагом. Часто такая особенность команды <b>G</b> бывает не только полезна, но и просто необходима, однако если вы собираетесь поработать над новой программой, прежде чем ее загружать, надо убедиться, что редактор свободен от какого бы то ни было текста, а если нет, то удалить его (как это сделать, мы скажем чуть позже).
<p>
Для сохранения полученного машинного кода (нередко называемого объектным, хотя это и не совсем верно) можно воспользоваться командой <b>O</b> (Object). Она имеет синтаксис, аналогичный команде <b>G</b>, то есть для записи оттранслированной программы в файл MYPROG при работе с лентой нужно ввести строку
<pre>
O,,MYPROG
</pre>
а при работе с дисководом A эта команда запишется как
<pre>
O,,1:MYPROG
</pre>
Записывая тексты и программы на диск, вы иногда можете увидеть на экране надпись
<pre>
File exists Delete (Y/N)?
</pre>
сообщающую о том, что одноименный файл уже имеется на диске. В&nbsp;этом случае вам предлагается решить, удалять этот файл или отказаться от записи с тем, чтобы заменить дискету и попытаться сохранить текст еще раз. Если на этот запрос ответить нажатием клавиши <b>Y</b>, то файл на диске будет переписан, нажатие любой другой клавиши приведет к отказу от выполнения команды.
<p><br>
<h3><a name="n09">УДАЛЕНИЕ ТЕКСТА</a></h3>
<hr>
Для удаления ненужных строк исходного текста в редакторе GENS имеется несколько возможностей. Первая из них в точности повторяет способ избавления от лишних строк в Бейсике: достаточно набрать номер удаляемой строки и нажать <b>Enter</b>.
<p>
Но, как вы понимаете, такой способ приемлем для удаления двух-трех строчек, когда же требуется ликвидировать значительную часть текста, подобная методика превращается в настоящую пытку. Фирма HISOFT учла интересы программистов и включила в редактор возможность удаления произвольной группы строк. Для этих целей служит команда <b>D</b> (Delete&nbsp;- удалить) с двумя параметрами, разделенными запятой. Первым указывается номер начальной строки удаляемого фрагмента, а затем&nbsp;- номер последней удаляемой строки. Например, для исключения из текста строк, начиная с сотой и по стопятидесятую включительно, нужно ввести команду
<pre>
D100,150
</pre>
Обращаться с этой командой нужно достаточно осторожно, так как выполняется она сразу же после ввода, безо всяких дополнительных подтверждающих запросов, а восстановить удаленный текст можно будет только если вы успели сохранить его на ленте или дискете. Ни в коем случае не следует использовать команду <b>D</b> без параметров, потому как при этом будут взяты параметры предыдущей введенной команды (параметры по умолчанию), а они могут далеко не соответствовать желаемым.
<p>
В редакторе GENS есть еще одна полезная команда, предназначенная для удаления текста. Это команда <b>Z</b>. С&nbsp;ее помощью можно быстро уничтожить сразу весь текст. Она не требует никаких параметров, а после ввода просит подтвердить ваши намерения запросом
<pre>
Delete text (Y/N)?
</pre>
Если вы не передумали стирать текст, нажмите клавишу <b>Y</b>, в противном случае&nbsp;- любую другую клавишу.
<p>

<hr>

<center><table border=0 cellpadding=24>
<tr><td>
<a href="wgasm02.htm#n00"><img src="prev.gif" border=0 hspace=8>Глава 2</a></td>
<a href="wgasm04.htm#n00">Глава 4<img src="next.gif" border=0 hspace=8></a>
</td></tr>
</table></center>
<center><a href="wgasmtoc.htm#n00">Оглавление</a></center>

<hr>

</BODY>
</HTML>

